var _user$project$Main$buttonStyle = function (color) {
	return _elm_lang$html$Html_Attributes$style(
		_elm_lang$core$Native_List.fromArray(
			[
				{ctor: '_Tuple2', _0: 'backgroundColor', _1: color},
				{ctor: '_Tuple2', _0: 'height', _1: '30px'},
				{ctor: '_Tuple2', _0: 'width', _1: '30px'},
				{ctor: '_Tuple2', _0: 'display', _1: 'inline-block'},
				{ctor: '_Tuple2', _0: 'margin-left', _1: '5px'}
			]));
};
var _user$project$Main$svgStyle = _elm_lang$core$Native_List.fromArray(
	[
		_elm_lang$svg$Svg_Attributes$x('170'),
		_elm_lang$svg$Svg_Attributes$y('170'),
		_elm_lang$svg$Svg_Attributes$width('150'),
		_elm_lang$svg$Svg_Attributes$height('150')
	]);
var _user$project$Main$dieBase = function (color) {
	return A2(
		_elm_lang$svg$Svg$rect,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$svg$Svg_Attributes$fill(color),
				_elm_lang$svg$Svg_Attributes$width('150'),
				_elm_lang$svg$Svg_Attributes$height('150'),
				_elm_lang$svg$Svg_Attributes$rx('25')
			]),
		_elm_lang$core$Native_List.fromArray(
			[]));
};
var _user$project$Main$transformHorizontal = function (horizontal) {
	var _p0 = horizontal;
	switch (_p0) {
		case 'left':
			return '30';
		case 'center':
			return '60';
		case 'right':
			return '90';
		default:
			return '0';
	}
};
var _user$project$Main$transformVertical = function (vertical) {
	var _p1 = vertical;
	switch (_p1) {
		case 'top':
			return '30';
		case 'middle':
			return '60';
		case 'bottom':
			return '90';
		default:
			return '0';
	}
};
var _user$project$Main$pip = F2(
	function (vertical, horizontal) {
		return A2(
			_elm_lang$svg$Svg$rect,
			_elm_lang$core$Native_List.fromArray(
				[
					_elm_lang$svg$Svg_Attributes$fill('#181818'),
					_elm_lang$svg$Svg_Attributes$x(
					_user$project$Main$transformHorizontal(horizontal)),
					_elm_lang$svg$Svg_Attributes$y(
					_user$project$Main$transformVertical(vertical)),
					_elm_lang$svg$Svg_Attributes$width('25'),
					_elm_lang$svg$Svg_Attributes$height('25'),
					_elm_lang$svg$Svg_Attributes$rx('55')
				]),
			_elm_lang$core$Native_List.fromArray(
				[]));
	});
var _user$project$Main$renderDie = function (model) {
	var _p2 = model.dieFace;
	switch (_p2) {
		case 1:
			return A2(
				_elm_lang$svg$Svg$svg,
				_user$project$Main$svgStyle,
				_elm_lang$core$Native_List.fromArray(
					[
						_user$project$Main$dieBase(model.dieColor),
						A2(_user$project$Main$pip, 'middle', 'center')
					]));
		case 2:
			return A2(
				_elm_lang$svg$Svg$svg,
				_user$project$Main$svgStyle,
				_elm_lang$core$Native_List.fromArray(
					[
						_user$project$Main$dieBase(model.dieColor),
						A2(_user$project$Main$pip, 'top', 'left'),
						A2(_user$project$Main$pip, 'bottom', 'right')
					]));
		case 3:
			return A2(
				_elm_lang$svg$Svg$svg,
				_user$project$Main$svgStyle,
				_elm_lang$core$Native_List.fromArray(
					[
						_user$project$Main$dieBase(model.dieColor),
						A2(_user$project$Main$pip, 'top', 'left'),
						A2(_user$project$Main$pip, 'middle', 'center'),
						A2(_user$project$Main$pip, 'bottom', 'right')
					]));
		case 4:
			return A2(
				_elm_lang$svg$Svg$svg,
				_user$project$Main$svgStyle,
				_elm_lang$core$Native_List.fromArray(
					[
						_user$project$Main$dieBase(model.dieColor),
						A2(_user$project$Main$pip, 'top', 'left'),
						A2(_user$project$Main$pip, 'bottom', 'left'),
						A2(_user$project$Main$pip, 'top', 'right'),
						A2(_user$project$Main$pip, 'bottom', 'right')
					]));
		case 5:
			return A2(
				_elm_lang$svg$Svg$svg,
				_user$project$Main$svgStyle,
				_elm_lang$core$Native_List.fromArray(
					[
						_user$project$Main$dieBase(model.dieColor),
						A2(_user$project$Main$pip, 'top', 'left'),
						A2(_user$project$Main$pip, 'bottom', 'left'),
						A2(_user$project$Main$pip, 'middle', 'center'),
						A2(_user$project$Main$pip, 'top', 'right'),
						A2(_user$project$Main$pip, 'bottom', 'right')
					]));
		case 6:
			return A2(
				_elm_lang$svg$Svg$svg,
				_user$project$Main$svgStyle,
				_elm_lang$core$Native_List.fromArray(
					[
						_user$project$Main$dieBase(model.dieColor),
						A2(_user$project$Main$pip, 'top', 'left'),
						A2(_user$project$Main$pip, 'middle', 'left'),
						A2(_user$project$Main$pip, 'bottom', 'left'),
						A2(_user$project$Main$pip, 'top', 'right'),
						A2(_user$project$Main$pip, 'middle', 'right'),
						A2(_user$project$Main$pip, 'bottom', 'right')
					]));
		default:
			return A2(
				_elm_lang$svg$Svg$svg,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[]));
	}
};
var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Main$initialModel = {dieFace: 1, dieColor: '#ff0000'};
var _user$project$Main$init = {ctor: '_Tuple2', _0: _user$project$Main$initialModel, _1: _elm_lang$core$Platform_Cmd$none};
var _user$project$Main$Model = F2(
	function (a, b) {
		return {dieFace: a, dieColor: b};
	});
var _user$project$Main$ChangeColor = function (a) {
	return {ctor: 'ChangeColor', _0: a};
};
var _user$project$Main$NewFace = function (a) {
	return {ctor: 'NewFace', _0: a};
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p3 = msg;
		switch (_p3.ctor) {
			case 'Roll':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: A2(
						_elm_lang$core$Random$generate,
						_user$project$Main$NewFace,
						A2(_elm_lang$core$Random$int, 1, 6))
				};
			case 'NewFace':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{dieFace: _p3._0}),
					_elm_lang$core$Native_List.fromArray(
						[]));
			default:
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{dieColor: _p3._0}),
					_elm_lang$core$Native_List.fromArray(
						[]));
		}
	});
var _user$project$Main$Roll = {ctor: 'Roll'};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$style(
				_elm_lang$core$Native_List.fromArray(
					[
						{ctor: '_Tuple2', _0: 'text-align', _1: 'center'},
						{ctor: '_Tuple2', _0: 'margin-top', _1: '50px'}
					]))
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						_user$project$Main$renderDie(model)
					])),
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$class('colors')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$div,
						_elm_lang$core$Native_List.fromArray(
							[
								_user$project$Main$buttonStyle('#ff0000'),
								_elm_lang$html$Html_Events$onClick(
								_user$project$Main$ChangeColor('#ff0000'))
							]),
						_elm_lang$core$Native_List.fromArray(
							[])),
						A2(
						_elm_lang$html$Html$div,
						_elm_lang$core$Native_List.fromArray(
							[
								_user$project$Main$buttonStyle('#3863ff'),
								_elm_lang$html$Html_Events$onClick(
								_user$project$Main$ChangeColor('#3863ff'))
							]),
						_elm_lang$core$Native_List.fromArray(
							[])),
						A2(
						_elm_lang$html$Html$div,
						_elm_lang$core$Native_List.fromArray(
							[
								_user$project$Main$buttonStyle('#01a536'),
								_elm_lang$html$Html_Events$onClick(
								_user$project$Main$ChangeColor('#01a536'))
							]),
						_elm_lang$core$Native_List.fromArray(
							[]))
					])),
				A2(
				_elm_lang$html$Html$button,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Events$onClick(_user$project$Main$Roll)
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Roll Die')
					]))
			]));
};
var _user$project$Main$main = {
	main: _elm_lang$html$Html_App$program(
		{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})
};
